---
- name: Check if vagrant is installed
  ansible.builtin.command:
    argv:
      - vagrant
      - version
  register: installed_result
  ignore_errors: true
  changed_when: false
  tags: ["packages", "vagrant"]

- name: Install vagrant
  when: 
    - installed_result.rc != 0
    - not vagrant_version is defined
  tags: ["packages", "vagrant"]
  block:
    - name: Get latest release
      ansible.builtin.uri:
        url: https://api.github.com/repos/{{ vagrant_repo }}/releases/latest
        return_content: true
      register: vagrant_release

    - name: Set version if not defined
      ansible.builtin.set_fact:
        vagrant_version: "{{ vagrant_release.json.tag_name | regex_search('[0-9].*') }}"

    - name: Check installed version
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          vagrant version 2>&1 | grep -q {{ vagrant_version }}
        executable: /bin/bash
      failed_when: false
      changed_when: false
      register: vagrant_version_match

    - name: Get checksums
      when: vagrant_version_match.rc != 0
      block:
        - name: Set vagrant_system fact
          ansible.builtin.set_fact:
            vagrant_system: "{{ ansible_system | lower }}"
          run_once: true
        - name: Get checksum list from github
          ansible.builtin.set_fact:
            vagrant_checksums: "{{ lookup('url', 'https://releases.hashicorp.com/vagrant/' + vagrant_version + '/vagrant_' + vagrant_version + '_SHA256SUMS', wantlist=True) | list }}"
          run_once: true
        - name: Get checksum for {{ vagrant_arch }}
          ansible.builtin.set_fact:
            vagrant_checksum: "sha256:{{ item.split(' ')[0] }}"
          with_items: "{{ vagrant_checksums }}"
          when:
            - "('vagrant-' + vagrant_version + '-1_' + vagrant_arch) in item"

- name: Create temporary directory
  ansible.builtin.file:
    state: directory
    path: "{{ vagrant_tmp_dir }}"
    owner: root
    group: root
    mode: "0755"
  tags: ["packages", "vagrant"]

- name: Include Debian OS specific tasks
  ansible.builtin.include_tasks: Debian.yml
  when:
    - ansible_os_family == 'Debian'
    - installed_result.rc != 0
  tags: ["packages", "vagrant"]

- name: Include RedHat OS specific tasks
  ansible.builtin.include_tasks: RedHat.yml
  when:
    - ansible_os_family == 'RedHat'
    - installed_result.rc != 0
  tags: ["packages", "vagrant"]
